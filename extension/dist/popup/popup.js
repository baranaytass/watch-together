(()=>{"use strict";class t{constructor(){this.currentDomain=null,this.detectButton=document.getElementById("detectButton"),this.startButton=document.getElementById("startButton"),this.statusElement=document.getElementById("status"),this.detectButton&&this.startButton&&this.statusElement?this.initialize():console.error("Required elements not found")}initialize(){this.detectButton.addEventListener("click",(()=>this.handleDetectProvider())),this.startButton.addEventListener("click",(()=>this.handleStartSession()))}async getCurrentTab(){const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});return t}async handleDetectProvider(){try{const t=await this.getCurrentTab();if(!t.url)return void this.updateStatus("No active tab found");const e=new URL(t.url).hostname;this.currentDomain=e;const s=await fetch(`http://localhost:5000/api/providers/check?domain=${e}`),n=await s.json();n.success&&n.isSupported?(this.updateStatus("Provider supported!"),this.startButton.style.display="block"):(this.updateStatus("Provider not supported"),this.startButton.style.display="none")}catch(t){console.error("Error detecting provider:",t),this.updateStatus("Error detecting provider")}}async handleStartSession(){if(this.currentDomain)try{const t=await this.getCurrentTab(),e=await fetch("http://localhost:5000/api/sessions",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({videoUrl:t.url,provider:this.currentDomain})}),s=await e.json();if(s.success){const t=`http://localhost:5000/watch/${s.sessionId}`;this.updateStatus(`Session created! Share link: ${t}`);const e=document.createElement("button");e.textContent="Copy Link",e.className="button",e.onclick=()=>{navigator.clipboard.writeText(t).then((()=>{e.textContent="Copied!",setTimeout((()=>{e.textContent="Copy Link"}),2e3)})).catch((t=>console.error("Failed to copy:",t)))},this.statusElement.appendChild(document.createElement("br")),this.statusElement.appendChild(e)}else this.updateStatus("Failed to create session")}catch(t){console.error("Error creating session:",t),this.updateStatus("Error creating session")}else this.updateStatus("No domain detected")}updateStatus(t){this.statusElement.textContent=t}}document.addEventListener("DOMContentLoaded",(()=>{new t}))})();